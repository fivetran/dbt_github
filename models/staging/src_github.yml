version: 2

sources:
  - name: github
    database: "{% if target.type != 'spark'%}{{ var('github_database', target.database) }}{% endif %}"
    schema: "{{var ('github_schema', 'github')}}"
    loader: Fivetran
    config:
      loaded_at_field: _fivetran_synced
      enabled: "{{ var('github_sources', []) == [] }}"
      freshness:
        warn_after: {count: 72, period: hour}
        error_after: {count: 168, period: hour}


    tables:
      - name: issue_assignee
        identifier:  "{{ var('github_issue_assignee_identifier', 'issue_assignee')}}"
        description: Table with the current user(s) assigned to an issue
        config:
          loaded_at_field: _fivetran_synced
          enabled: "{{ var('github__using_issue_assignee', true) and var('github_sources', []) == [] }}"
        columns:
          - name: issue_id
            description: Foreign key that references the issue table
          - name: user_id
            description: Foreign key that references the user table

      - name: label
        identifier:  "{{ var('github_label_identifier', 'label')}}"
        description: Table that contains labels that are used across your Github account within individual repositories.
        config:
          freshness: null
          enabled: "{{ var('github__using_label', true) and var('github_sources', []) == [] }}"
        columns:
          - name: id
            description: Unique identifier of the Github label
          - name: _fivetran_synced
            description: Timestamp of the record being synced by Fivetran
          - name: color
            description: The color of the label
          - name: description
            description: The description of the label indicating the purpose
          - name: is_default
            description: Boolean flagging if the label is default on creation
          - name: name
            description: Name of the label
          - name: url
            description: Url where the label was used

      - name: issue_closed_history
        identifier:  "{{ var('github_issue_closed_history_identifier', 'issue_closed_history')}}"
        description: Table to track when an issue is closed or re-opened
        columns:
          - name: issue_id
            description: Foreign key that references the issue table
          - name: updated_at
            description: Timestamp of when the action took place
          - name: closed
            description: Boolean variable for if the issue was closed (true) or re-opened (false)

      - name: issue_label
        identifier:  "{{ var('github_issue_label_identifier', 'issue_label')}}"
        description: The current labels attached to an issue
        config:
          loaded_at_field: _fivetran_synced
          enabled: "{{ var('github__using_issue_label', true) and var('github_sources', []) == [] }}"
        columns:
          - name: issue_id
            description: Foreign key that references the issue table
          - name: label_id
            description: Unique identifier of the used label

      - name: issue_comment
        identifier:  "{{ var('github_issue_comment_identifier', 'issue_comment')}}"
        description: Table that contains comments made on issues
        columns:
          - name: id
            description: System generated unique id for the issue comment.
          - name: issue_id
            description: Foreign key that references the issue table
          - name: user_id
            description: Foreign key that references the user table
          - name: created_at
            description: Timestamp of when the issue comment was created.

      - name: issue_merged
        identifier:  "{{ var('github_issue_merged_identifier', 'issue_merged')}}"
        description: Table that tracks when an issue (always a pull request) is merged
        columns:
          - name: issue_id
            description: Foreign key that references the issue table.  This table will only reference issues that are pull requests
          - name: merged_at
            description: Timestamp of when the code merge took place

      - name: issue
        identifier:  "{{ var('github_issue_identifier', 'issue')}}"
        description: Table that contains 1 entry for every issue created.  Pull Requests also create an entry in this table, and there is a boolean field to determine if an entry is a pull request.
        columns:
          - name: id
            description: System generated unique id for the issue.  This is not the number that appears in the URL.
          - name: body
            description: The text of the main description of the issue.
          - name: locked
            description: Boolean indicating whether the issue is locked.
          - name: closed_at
            description: Timestamp of when the issue was closed, NULL for issues that are open.
          - name: created_at
            description: Timestamp of when the issue was created.
          - name: milestone_id
            description: Foreign key that references the milestone table representing the current milestone the issue is in.
          - name: number
            description: The issue number within a repository.  Is unique by repository, but not across repositories.
          - name: pull_request
            description: Boolean for is the issue is a pull request (true) ot regular issue (false)
          - name: repository_id
            description: Foreign key that references the repository table.
          - name: state
            description: Whether the issue is open or closed.
          - name: title
            description: Title of the issue.
          - name: updated_at
            description:  Timestamp of when the last update was made to the issue.
          - name: user_id
            description: Foreign key that references the user table, representing the user that created the issue.

      - name: pull_request_review
        identifier:  "{{ var('github_pull_request_review_identifier', 'pull_request_review')}}"
        description: Table containing reviews made to pull requests
        columns:
          - name: id
            description: System generated unique id for the pull request review.
          - name: pull_request_id
            description: Foreign key that references the pull request table.
          - name: submitted_at
            description:  Timestamp of when the request for review was submitted.
          - name: state
            description: Whether the review was an approval, request for change, comment, dismissal.
          - name: user_id
            description: Foreign key that references the user table, representing the user that reviewed the pull request.
            
      - name: pull_request
        identifier:  "{{ var('github_pull_request_identifier', 'pull_request')}}"
        description: A special type of issue that is created when a user wants to merge one branch of code into another
        columns:
          - name: id
            description: System generated unique id for the pull request.
          - name: issue_id
            description: Foreign key that references the issue table.
          - name: head_repo_id
            description: Foreign key that references the repository table, referencing the current branch.
          - name: head_user_id
            description: Foreign key that references the user table, referencing who created the current branch.

      - name: repo_team
        identifier:  "{{ var('github_repo_team_identifier', 'repo_team')}}"
        description: Table representing the mapping relationships between repositories and teams
        config:
          loaded_at_field: _fivetran_synced
          enabled: "{{ var('github__using_repo_team', true) and var('github_sources', []) == [] }}"
        columns:
          - name: repository_id
            description: Reference to the respective repository for the record.
          - name: team_id
            description: Reference to the respective team for the record.
            
      - name: repository
        identifier:  "{{ var('github_repository_identifier', 'repository')}}"
        description: Table representing the file structure of a directory under git control
        config:
          freshness: null
        columns:
          - name: id
            description: System generated unique id for the repository.
          - name: created_at
            description:  Timestamp of when the repository was created.
          - name: full_name
            description: The name of the git repository.
          - name: private
            description: Boolean field indicating whether the repository is private (true) or public (false).
            
      - name: requested_reviewer_history
        identifier:  "{{ var('github_requested_reviewer_history_identifier', 'requested_reviewer_history')}}"
        description: Table containing when a user requests another user to review a pull request
        config:
          loaded_at_field: _fivetran_synced
          enabled: "{{ var('github__using_requested_reviewer_history', true) and var('github_sources', []) == [] }}"
        columns:
          - name: pull_request_id
            description: Foreign key that references the pull request table.
          - name: created_at
            description:  Timestamp of when the review was submitted.
          - name: requested_id
            description: Foreign key that references the user table, representing the user that was requested to review a PR.
          - name: removed
            description: Boolean variable indicating if the requester was removed from the PR (true) or added to the PR (false).

      - name: team
        identifier:  "{{ var('github_team_identifier', 'team')}}"
        description: Table containing teams and team details
        columns:
          - name: id
            description: System generated unique id for the team.
          - name: description
            description: User created description of the team.
          - name: name
            description: User created name of the team.
          - name: parent_id
            description: Reference to the parent team.
          - name: privacy
            description: Type of privacy permissions associated with the team.
          - name: slug
            description: Url friendly version of the team name.
            
      - name: user
        identifier:  "{{ var('github_user_identifier', 'user')}}"
        description: Table representing contributors to a git project
        config:
          freshness: null
        columns:
          - name: id
            description: System generated unique id for the user.
          - name: login
            description: The alias the user uses to login to github.
          - name: name
            description: The name of the user
          - name: company
            description: The  company of the user.
